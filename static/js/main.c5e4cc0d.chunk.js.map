{"version":3,"sources":["data.js","ThemeProvider.js","Post.js","App.js","index.js"],"names":["data","id","title","date","length","content","liked","themeContext","createContext","ThemeProvider","props","useState","setTheme","Provider","value","children","Post","like","setLike","useContext","theme","className","onClick","App","console","log","map","post","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wNAmCeA,G,MAnCF,CACX,CACEC,GAAI,EACJC,MAAO,SACPC,KAAM,WACNC,OAAQ,GACRC,QAAQ,qCACRC,OAAO,GAET,CACEL,GAAI,EACJC,MAAO,SACPC,KAAM,WACNC,OAAQ,EACRC,QAAQ,qCACRC,OAAO,GAET,CACEL,GAAI,EACJC,MAAO,SACPC,KAAM,WACNC,OAAQ,EACRC,QAAQ,qCACRC,OAAO,GAET,CACEL,GAAI,EACJC,MAAO,SACPC,KAAM,WACNC,OAAQ,EACRC,QAAQ,qCACRC,OAAO,K,OC5BEC,EAAeC,0BAcbC,EAZO,SAACC,GAErB,MAA0BC,oBAAS,GAAnC,mBAAcC,GAAd,WAEA,OAEE,aADA,CACCL,EAAaM,SAAd,CAAuBC,MAAeF,EAAtC,SACGF,EAAMK,UAGZ,ECkCcC,EA/CF,SAACN,GAGZ,MAAwBC,oBAAS,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA0BC,qBAAWZ,GAArC,mBAAOa,EAAP,UAEA,OACE,sBAAKC,UAAWD,EAAQ,oBAAsB,mBAA9C,UACE,uBACA,6BAAKV,EAAMR,QACX,8BACE,8BACE,sBAAMmB,UAAWD,EAAQ,gBAAkB,eAA3C,SACGV,EAAMP,OAET,uBACA,uBAAMkB,UAAWD,EAAQ,gBAAkB,eAA3C,UACGV,EAAMN,OADT,oBAKJ,mBAAGiB,UAAWD,EAAQ,gBAAkB,eAAxC,SACGV,EAAML,UAERY,EACC,wBACEK,QAAS,WACPJ,GAASD,EACV,EACDI,UAAU,WAJZ,oBASA,wBACEC,QAAS,WACPJ,GAASD,EACV,EACDI,UAAU,YAJZ,oBAWP,ECVcE,MA5Bf,WACE,MAA0BJ,qBAAWZ,GAArC,mBAAOa,EAAP,KAAcR,EAAd,KACA,OACE,sBAAKS,UAAWD,EAAQ,mBAAqB,kBAA7C,UACE,8BACE,sBAAKC,UAAU,UAAf,UACE,sCACA,wBACEA,UAAU,MACVC,QAAS,WACPV,GAAUQ,GACVI,QAAQC,IAAIL,EACb,EALH,0BASA,4BAGJ,8BACGpB,EAAK0B,KAAI,SAACC,GACT,OAAO,cAAC,EAAD,eAAwBA,GAAbA,EAAK1B,GACxB,QAIR,EC9BK2B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJJ,E","file":"static/js/main.c5e4cc0d.chunk.js","sourcesContent":["const data = [\n  {\n    id: 1,\n    title: \"Post 1\",\n    date: \"29-08-21\",\n    length: 11,\n    content: `This is post 1 and it contains ...`,\n    liked: false\n  },\n  {\n    id: 2,\n    title: \"Post 2\",\n    date: \"21-08-21\",\n    length: 5,\n    content: `This is post 2 and it contains ...`,\n    liked: false\n  },\n  {\n    id: 3,\n    title: \"Post 3\",\n    date: \"01-04-21\",\n    length: 5,\n    content: `This is post 3 and it contains ...`,\n    liked: false\n  },\n  {\n    id: 4,\n    title: \"Post 4\",\n    date: \"20-03-21\",\n    length: 5,\n    content: `This is post 4 and it contains ...`,\n    liked: false\n  }\n];\n\nexport default data;\n","import { createContext, useState } from \"react\";\r\n\r\n//create a context, with createContext api\r\nexport const themeContext = createContext();\r\n\r\nconst ThemeProvider = (props) => {\r\n  // this state will be shared with all components\r\n  const [theme, setTheme] = useState(true);\r\n\r\n  return (\r\n    // this is the provider providing state\r\n    <themeContext.Provider value={(theme, setTheme)}>\r\n      {props.children}\r\n    </themeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeProvider;\r\n","import { useContext, useState } from \"react\";\nimport { themeContext } from \"./ThemeProvider\";\nconst Post = (props) => {\n  //Task-2: Toggle \"liked-btn\" and \"like-btn\" class when user clicks the like button.\n\n  const [like, setLike] = useState(false);\n  const [theme, setTheme] = useContext(themeContext);\n\n  return (\n    <div className={theme ? \" post light-theme\" : \" post dark-theme\"}>\n      <hr />\n      <h2>{props.title}</h2>\n      <div>\n        <i>\n          <span className={theme ? \"  light-theme\" : \"  dark-theme\"}>\n            {props.date}\n          </span>\n          <br />\n          <span className={theme ? \"  light-theme\" : \"  dark-theme\"}>\n            {props.length} min read\n          </span>\n        </i>\n      </div>\n      <p className={theme ? \"  light-theme\" : \"  dark-theme\"}>\n        {props.content}\n      </p>\n      {like ? (\n        <button\n          onClick={() => {\n            setLike(!like);\n          }}\n          className=\"like-btn\"\n        >\n          UnLike\n        </button>\n      ) : (\n        <button\n          onClick={() => {\n            setLike(!like);\n          }}\n          className=\"liked-btn\"\n        >\n          Like\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import \"./styles.css\";\nimport data from \"./data\";\nimport Post from \"./Post\";\nimport { useContext } from \"react\";\nimport { themeContext } from \"./ThemeProvider\";\n\n// Task-1: Create a mechanism for toggling \"light-theme\" and \"dark-theme\" classes.\n// After that, head over to ./Post.js\n\nfunction App() {\n  const [theme, setTheme] = useContext(themeContext);\n  return (\n    <div className={theme ? \" App light-theme\" : \" App dark-theme\"}>\n      <div>\n        <nav className=\"nav-bar\">\n          <h1>Home</h1>\n          <button\n            className=\"btn\"\n            onClick={() => {\n              setTheme(!theme);\n              console.log(theme);\n            }}\n          >\n            Toggle Theme\n          </button>\n          <br />\n        </nav>\n      </div>\n      <div>\n        {data.map((post) => {\n          return <Post key={post.id} {...post} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport ThemeProvider from \"./ThemeProvider\";\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}